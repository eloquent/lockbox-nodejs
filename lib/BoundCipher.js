// Generated by CoffeeScript 1.6.3
/*
This file is part of the Lockbox package.

Copyright Â© 2013 Erin Millard

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.
*/


(function() {
  var BoundCipher, DecryptionCipher, EncryptionCipher, InvalidPrivateKeyException;

  DecryptionCipher = require('./DecryptionCipher');

  EncryptionCipher = require('./EncryptionCipher');

  InvalidPrivateKeyException = require('./Exception/InvalidPrivateKeyException');

  module.exports = BoundCipher = (function() {
    function BoundCipher(key, encryptionCipher, decryptionCipher, ursa) {
      var error;
      if (encryptionCipher == null) {
        encryptionCipher = new EncryptionCipher;
      }
      if (decryptionCipher == null) {
        decryptionCipher = new DecryptionCipher;
      }
      if (ursa == null) {
        ursa = require('ursa');
      }
      try {
        ursa.assertPrivateKey(key);
      } catch (_error) {
        error = _error;
        throw new InvalidPrivateKeyException(key, error);
      }
      this._key = key;
      this._encryptionCipher = encryptionCipher;
      this._decryptionCipher = decryptionCipher;
    }

    BoundCipher.prototype.encrypt = function(data) {
      return this._encryptionCipher.encrypt(this._key, data);
    };

    BoundCipher.prototype.decrypt = function(data) {
      return this._decryptionCipher.decrypt(this._key, data);
    };

    return BoundCipher;

  })();

}).call(this);
